import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { Logger } from '@nestjs/common';

async function bootstrap() {
  try {
    const app = await NestFactory.create(AppModule);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞
    app.enableCors({
      origin: ['http://localhost:3000', 'http://localhost:3002'],
      credentials: true,
      methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
      allowedHeaders: ['Content-Type', 'Authorization'],
    });
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è API
    app.setGlobalPrefix('api');
    
    const port = process.env.PORT || 3001;
    await app.listen(port);
    
    new Logger('MainTS').log(`üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
    new Logger('MainTS').log(`üì° API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}/api`);
    new Logger('MainTS').log(`ü§ñ Telegram Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...`);
  } catch (error) {
    new Logger('MainTS').error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
    process.exit(1);
  }
}

bootstrap();